{"version":3,"sources":["views/GeraJogos/Numero.js","views/components/SnackbarAlert.js","services/sorteador.js","views/GeraJogos/PainelJogos.js","views/GeraJogos/index.js","App.js","index.js"],"names":["useStyles","makeStyles","numeroDefault","background","color","numeroSelecionado","Numero","numero","selecionado","seleciona","size","classes","classe","Fab","className","onClick","SnackbarAlert","props","message","open","onClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","action","IconButton","aria-label","fontSize","gerarNumeros","quantidade","maximoNumeros","numeros","numerosSorteados","i","push","length","index","this","geraNumero","splice","indexOf","min","max","num","Math","random","gerarJogos","quatidadeJogos","quantidadeNumeros","numerosSelecionados","jogos","jogo","gerarJogo","verificaJogoSorteado","sort","a","b","filter","j","every","value","theme","root","paddingLeft","paddingRight","ordemJogo","display","justifyContent","alignItems","borderRadius","marginBottom","fundo1","fundo2","PainelJogos","Grid","container","spacing","map","item","xs","key","_","console","log","margin","painelNumbers","sessao","padding","paddingBottom","backdrop","zIndex","drawer","GeraJogos","useState","selecionados","setSelecionados","setQuantidadeNumeros","quantidadeJogos","setQuantidadeJogos","tamanhoJogo","setTamanhoJogo","alertMessage","setAlertMessage","loading","setLoading","setJogos","verificaSelecionado","selecionaNumero","indice","Backdrop","CircularProgress","Container","Paper","elevation","style","marginTop","TextField","label","variant","type","onChange","evt","target","Button","nums","Sorteador","App","CssBaseline","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af6820e8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { Fab } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles({\r\n    numeroDefault: {\r\n        background: '#c2c2c4',\r\n        color: '#000'\r\n    },\r\n    numeroSelecionado: {\r\n        background: '#8d24af',\r\n        color: '#fff'\r\n    }\r\n});\r\n\r\nexport default function Numero({ numero, selecionado, seleciona, size }) {\r\n    const classes = useStyles();\r\n\r\n    let classe = classes.numeroDefault;\r\n\r\n    if (selecionado) {\r\n        classe = classes.numeroSelecionado;\r\n    }\r\n\r\n    return (\r\n        <Fab className={classe} size={size} onClick={() => seleciona(numero)}>\r\n            {numero}\r\n        </Fab>\r\n    )\r\n}","import React from 'react'\r\nimport { Snackbar, IconButton } from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport default function SnackbarAlert(props) {\r\n\r\n    var { message, open, onClose } = props\r\n\r\n    return (\r\n        <Snackbar\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right'\r\n            }}\r\n            open={open}\r\n            autoHideDuration={5000}\r\n            onClose={onClose}\r\n            message={message}\r\n            action={\r\n                <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                </IconButton>\r\n            }\r\n        />\r\n    )\r\n}","\r\nexport default {\r\n    gerarNumeros: function (quantidade, maximoNumeros) {\r\n        var numeros = [];\r\n        var numerosSorteados = [];\r\n        \r\n        for (var i = 1; i <= maximoNumeros; i++) {\r\n            numeros.push(i)\r\n        }\r\n\r\n        while(numerosSorteados.length < quantidade) {\r\n            var index = this.geraNumero(0, numeros.length - 1)\r\n            numerosSorteados.push(numeros[index])\r\n            numeros.splice(numeros.indexOf(numeros[index]), 1)\r\n        }\r\n\r\n        return numerosSorteados;\r\n    },\r\n\r\n    geraNumero: function (min, max) {\r\n        var num = Math.random() * (max - min) + min;\r\n        return num - (num % 1);\r\n    },\r\n\r\n    gerarJogos: function(quatidadeJogos, quantidadeNumeros, numerosSelecionados) {\r\n        var jogos = [];\r\n        \r\n        var jogo = null;\r\n        for(var i = 0; i < quatidadeJogos; i++) {\r\n            do {\r\n                jogo = this.gerarJogo(quantidadeNumeros, numerosSelecionados);\r\n            } while(this.verificaJogoSorteado(jogo, jogos));\r\n\r\n            jogos.push(jogo)\r\n        }\r\n\r\n        return jogos;\r\n    },\r\n\r\n    gerarJogo: function(quantidade, numerosSelecionados) {\r\n        var numeros = [...numerosSelecionados]\r\n        var jogo = []\r\n\r\n        while(jogo.length < quantidade) {\r\n            var numero = numeros[this.geraNumero(0, numeros.length - 1)]\r\n            jogo.push(numero)\r\n            numeros.splice(numeros.indexOf(numero), 1)\r\n        }\r\n\r\n        return jogo.sort((a, b) => {\r\n            if(a < b) return -1;\r\n            else if(a > b) return 1;\r\n            return 0;\r\n        });\r\n    },\r\n\r\n    verificaJogoSorteado: function(jogo, jogos) {\r\n        return jogos.filter(j => \r\n            j.every((value, index) => value === jogo[index])\r\n        ).length > 0\r\n    }\r\n}","import React from 'react'\r\nimport { Grid, Fab } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Numero from './Numero';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        paddingLeft: '10px',\r\n        paddingRight: '10px',\r\n    },\r\n    ordemJogo: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    numeros: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        borderRadius: '5px',\r\n        marginBottom: '10px',\r\n    },\r\n    fundo1: {\r\n        background: '#D5D5D5',\r\n    },\r\n    fundo2: {\r\n        background: '#e8e8e8',\r\n    },\r\n}));\r\n\r\nexport default function PainelJogos({ jogos }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container spacing={3} className={classes.root}>\r\n            {\r\n                jogos.map((jogo, index) =>\r\n                    <>\r\n                        <Grid item xs={1} className={classes.ordemJogo}>\r\n                            <Fab color=\"primary\">{index + 1}</Fab>\r\n                        </Grid>\r\n                        <Grid\r\n                            item\r\n                            xs={11}\r\n                            className={[classes.numeros, index % 2 === 0 ? classes.fundo1 : classes.fundo2]}\r\n                            key={jogo}>\r\n                            {\r\n                                jogo.map(numero =>\r\n                                    <Numero\r\n                                        key={numero}\r\n                                        numero={numero}\r\n                                        selecionado={true}\r\n                                        seleciona={_ => console.log()} />\r\n                                )\r\n                            }\r\n                        </Grid>\r\n                    </>\r\n                )\r\n            }\r\n        </Grid>\r\n    )\r\n}","import React, { useState } from 'react'\r\n\r\nimport { Container, Grid, Paper, Button, TextField, Backdrop, CircularProgress } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport Numero from './Numero';\r\nimport SnackbarAlert from '../components/SnackbarAlert';\r\nimport Sorteador from '../../services/sorteador'\r\nimport PainelJogos from './PainelJogos';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    spacing: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    painelNumbers: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    sessao: {\r\n        padding: '10px',\r\n        paddingBottom: '20px',\r\n        marginBottom: '20px'\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nconst TAMANHO_LISTA_NUMEROS = 25;\r\n\r\nconst numeros = [];\r\nfor (var i = 0; i < TAMANHO_LISTA_NUMEROS; i++) numeros[i] = i + 1;\r\n\r\nexport default function GeraJogos() {\r\n    const classes = useStyles();\r\n\r\n    const [selecionados, setSelecionados] = useState([]);\r\n    const [quantidadeNumeros, setQuantidadeNumeros] = useState(15);\r\n    const [quantidadeJogos, setQuantidadeJogos] = useState(1);\r\n    const [tamanhoJogo, setTamanhoJogo] = useState(15);\r\n    const [alertMessage, setAlertMessage] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const [jogos, setJogos] = useState([])\r\n\r\n    const verificaSelecionado = (numero) => {\r\n        return selecionados.filter(selecionado => numero === selecionado).length > 0\r\n    }\r\n\r\n    const selecionaNumero = (numero) => {\r\n        var indice = selecionados.indexOf(numero);\r\n\r\n        if (indice > -1) {\r\n            selecionados.splice(indice, 1);\r\n        } else {\r\n            selecionados.push(numero);\r\n        }\r\n\r\n        setSelecionados([...selecionados]);\r\n        setQuantidadeNumeros(selecionados.length)\r\n    }\r\n\r\n    const alteraQtdeNumeros = (quantidade) => {\r\n        setSelecionados([]);\r\n        setQuantidadeNumeros(quantidade)\r\n    }\r\n\r\n    const handlerSortearNumeros = () => {\r\n        setLoading(true)\r\n\r\n        if (quantidadeNumeros > 25) {\r\n            setAlertMessage(\"Informe no maxímo 25 números\")\r\n            return\r\n        }\r\n\r\n        var nums = Sorteador.gerarNumeros(quantidadeNumeros, TAMANHO_LISTA_NUMEROS)\r\n\r\n        setSelecionados(nums)\r\n        setLoading(false)\r\n    }\r\n\r\n    const handlerGerarJogos = () => {\r\n        if (tamanhoJogo < 15) {\r\n            setAlertMessage(\"O tamanho mínimo de um jogo é de 15 números\")\r\n            return\r\n        }\r\n\r\n        if (selecionados.length < 15) {\r\n            setAlertMessage(\"Você deve selecionar ao menos 15 números\")\r\n            return\r\n        }\r\n\r\n        if (quantidadeJogos < 1) {\r\n            setAlertMessage(\"A quantidade mínima de jogos é 1\")\r\n            return\r\n        }\r\n\r\n        if(quantidadeJogos > 1 && selecionados.length === 15) {\r\n            setAlertMessage(\"Para gerar mais de 1 jogo você deve selecionar mais de 15 números\")\r\n            return\r\n        }\r\n\r\n        setLoading(true)\r\n\r\n        var jogos = Sorteador.gerarJogos(quantidadeJogos, tamanhoJogo, selecionados)\r\n        setJogos(jogos)\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <SnackbarAlert\r\n                message={alertMessage}\r\n                open={alertMessage.length > 0}\r\n                onClose={() => setAlertMessage(\"\")}\r\n            />\r\n\r\n            <Backdrop className={classes.backdrop} open={loading}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n\r\n            <Container>\r\n\r\n                <Paper className={classes.sessao} elevation={3}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <h2>Selecione os números:</h2>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} className={classes.painelNumbers}>\r\n                            {numeros.map(numero =>\r\n                                <Numero\r\n                                    key={numero}\r\n                                    size=\"small\"\r\n                                    numero={numero}\r\n                                    selecionado={verificaSelecionado(numero)}\r\n                                    seleciona={selecionaNumero} />\r\n                            )}\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container spacing={3} style={{ marginTop: '20px', display: 'flex', justifyContent: 'space-between' }}>\r\n                        <Grid item xs={4} style={{ display: 'flex', alignItems: 'center' }}>\r\n                            <TextField\r\n                                size=\"small\"\r\n                                label=\"Quantidade Números\"\r\n                                variant=\"outlined\"\r\n                                type=\"number\"\r\n                                value={quantidadeNumeros}\r\n                                onChange={evt => alteraQtdeNumeros(evt.target.value)} />&nbsp;\r\n\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={handlerSortearNumeros}>\r\n                                Gerar Números\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={6} style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\r\n                            <TextField\r\n                                size=\"small\"\r\n                                label=\"Tamanho Jogo\"\r\n                                variant=\"outlined\"\r\n                                type=\"number\"\r\n                                value={tamanhoJogo}\r\n                                onChange={evt => setTamanhoJogo(evt.target.value)} />&nbsp;\r\n\r\n                            <TextField\r\n                                size=\"small\"\r\n                                label=\"Quantidade Jogos\"\r\n                                variant=\"outlined\"\r\n                                type=\"number\"\r\n                                value={quantidadeJogos}\r\n                                onChange={evt => setQuantidadeJogos(evt.target.value)} />&nbsp;\r\n\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={handlerGerarJogos}>\r\n                                Gerar Jogos\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n\r\n                <Paper className={classes.sessao} elevation={3}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <h2>Jogos</h2>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <PainelJogos jogos={jogos} />\r\n                </Paper>\r\n            </Container>\r\n        </>\r\n    );\r\n}","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch, Route, Link\n} from 'react-router-dom'\nimport GeraJogos from './views/GeraJogos';\nimport { CssBaseline } from '@material-ui/core';\n\nfunction App() {\n  return (\n    <CssBaseline>\n      <Router>\n        <div>\n          <Switch>\n            <Route path=\"/\" exact>\n              <GeraJogos />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </CssBaseline>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}